# Generated from proyecto.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,32,257,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,
        5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,
        7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,
        9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,
        4,14,187,8,14,11,14,12,14,188,1,15,4,15,192,8,15,11,15,12,15,193,
        1,16,1,16,5,16,198,8,16,10,16,12,16,201,9,16,1,17,4,17,204,8,17,
        11,17,12,17,205,1,17,1,17,5,17,210,8,17,10,17,12,17,213,9,17,1,18,
        1,18,4,18,217,8,18,11,18,12,18,218,1,18,1,18,1,19,1,19,1,19,1,19,
        3,19,227,8,19,1,20,4,20,230,8,20,11,20,12,20,231,1,20,1,20,1,21,
        1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
        1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,0,0,32,1,1,3,2,5,3,7,4,9,
        5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
        33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
        55,28,57,29,59,30,61,31,63,32,1,0,6,2,0,10,10,13,13,1,0,48,57,2,
        0,65,90,97,122,3,0,48,57,65,90,97,122,3,0,10,10,13,13,34,34,3,0,
        9,10,13,13,32,32,264,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
        0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
        0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
        0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
        0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,
        0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,
        0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,1,65,1,0,0,0,3,76,1,0,
        0,0,5,85,1,0,0,0,7,92,1,0,0,0,9,100,1,0,0,0,11,112,1,0,0,0,13,119,
        1,0,0,0,15,125,1,0,0,0,17,134,1,0,0,0,19,144,1,0,0,0,21,149,1,0,
        0,0,23,159,1,0,0,0,25,168,1,0,0,0,27,178,1,0,0,0,29,186,1,0,0,0,
        31,191,1,0,0,0,33,195,1,0,0,0,35,203,1,0,0,0,37,214,1,0,0,0,39,226,
        1,0,0,0,41,229,1,0,0,0,43,235,1,0,0,0,45,237,1,0,0,0,47,239,1,0,
        0,0,49,241,1,0,0,0,51,243,1,0,0,0,53,245,1,0,0,0,55,247,1,0,0,0,
        57,249,1,0,0,0,59,251,1,0,0,0,61,253,1,0,0,0,63,255,1,0,0,0,65,66,
        5,67,0,0,66,67,5,104,0,0,67,68,5,97,0,0,68,69,5,114,0,0,69,70,5,
        109,0,0,70,71,5,97,0,0,71,72,5,110,0,0,72,73,5,100,0,0,73,74,5,101,
        0,0,74,75,5,114,0,0,75,2,1,0,0,0,76,77,5,84,0,0,77,78,5,111,0,0,
        78,79,5,116,0,0,79,80,5,111,0,0,80,81,5,100,0,0,81,82,5,105,0,0,
        82,83,5,108,0,0,83,84,5,101,0,0,84,4,1,0,0,0,85,86,5,87,0,0,86,87,
        5,111,0,0,87,88,5,111,0,0,88,89,5,112,0,0,89,90,5,101,0,0,90,91,
        5,114,0,0,91,6,1,0,0,0,92,93,5,80,0,0,93,94,5,105,0,0,94,95,5,107,
        0,0,95,96,5,97,0,0,96,97,5,99,0,0,97,98,5,104,0,0,98,99,5,117,0,
        0,99,8,1,0,0,0,100,101,5,67,0,0,101,102,5,111,0,0,102,103,5,114,
        0,0,103,104,5,118,0,0,104,105,5,105,0,0,105,106,5,107,0,0,106,107,
        5,110,0,0,107,108,5,105,0,0,108,109,5,103,0,0,109,110,5,104,0,0,
        110,111,5,116,0,0,111,10,1,0,0,0,112,113,5,82,0,0,113,114,5,97,0,
        0,114,115,5,116,0,0,115,116,5,97,0,0,116,117,5,116,0,0,117,118,5,
        97,0,0,118,12,1,0,0,0,119,120,5,80,0,0,120,121,5,97,0,0,121,122,
        5,114,0,0,122,123,5,97,0,0,123,124,5,115,0,0,124,14,1,0,0,0,125,
        126,5,67,0,0,126,127,5,108,0,0,127,128,5,101,0,0,128,129,5,102,0,
        0,129,130,5,97,0,0,130,131,5,98,0,0,131,132,5,108,0,0,132,133,5,
        101,0,0,133,16,1,0,0,0,134,135,5,84,0,0,135,136,5,101,0,0,136,137,
        5,110,0,0,137,138,5,116,0,0,138,139,5,97,0,0,139,140,5,99,0,0,140,
        141,5,111,0,0,141,142,5,111,0,0,142,143,5,108,0,0,143,18,1,0,0,0,
        144,145,5,83,0,0,145,146,5,101,0,0,146,147,5,101,0,0,147,148,5,108,
        0,0,148,20,1,0,0,0,149,150,5,68,0,0,150,151,5,114,0,0,151,152,5,
        97,0,0,152,153,5,103,0,0,153,154,5,111,0,0,154,155,5,110,0,0,155,
        156,5,105,0,0,156,157,5,116,0,0,157,158,5,101,0,0,158,22,1,0,0,0,
        159,160,5,78,0,0,160,161,5,101,0,0,161,162,5,99,0,0,162,163,5,114,
        0,0,163,164,5,111,0,0,164,165,5,122,0,0,165,166,5,109,0,0,166,167,
        5,97,0,0,167,24,1,0,0,0,168,169,5,67,0,0,169,170,5,114,0,0,170,171,
        5,101,0,0,171,172,5,115,0,0,172,173,5,115,0,0,173,174,5,101,0,0,
        174,175,5,108,0,0,175,176,5,105,0,0,176,177,5,97,0,0,177,26,1,0,
        0,0,178,179,5,77,0,0,179,180,5,101,0,0,180,181,5,119,0,0,181,182,
        5,116,0,0,182,183,5,119,0,0,183,184,5,111,0,0,184,28,1,0,0,0,185,
        187,7,0,0,0,186,185,1,0,0,0,187,188,1,0,0,0,188,186,1,0,0,0,188,
        189,1,0,0,0,189,30,1,0,0,0,190,192,7,1,0,0,191,190,1,0,0,0,192,193,
        1,0,0,0,193,191,1,0,0,0,193,194,1,0,0,0,194,32,1,0,0,0,195,199,7,
        2,0,0,196,198,7,3,0,0,197,196,1,0,0,0,198,201,1,0,0,0,199,197,1,
        0,0,0,199,200,1,0,0,0,200,34,1,0,0,0,201,199,1,0,0,0,202,204,7,1,
        0,0,203,202,1,0,0,0,204,205,1,0,0,0,205,203,1,0,0,0,205,206,1,0,
        0,0,206,207,1,0,0,0,207,211,5,46,0,0,208,210,7,1,0,0,209,208,1,0,
        0,0,210,213,1,0,0,0,211,209,1,0,0,0,211,212,1,0,0,0,212,36,1,0,0,
        0,213,211,1,0,0,0,214,216,5,34,0,0,215,217,8,4,0,0,216,215,1,0,0,
        0,217,218,1,0,0,0,218,216,1,0,0,0,218,219,1,0,0,0,219,220,1,0,0,
        0,220,221,5,34,0,0,221,38,1,0,0,0,222,223,5,48,0,0,223,227,5,70,
        0,0,224,225,5,49,0,0,225,227,5,86,0,0,226,222,1,0,0,0,226,224,1,
        0,0,0,227,40,1,0,0,0,228,230,7,5,0,0,229,228,1,0,0,0,230,231,1,0,
        0,0,231,229,1,0,0,0,231,232,1,0,0,0,232,233,1,0,0,0,233,234,6,20,
        0,0,234,42,1,0,0,0,235,236,5,61,0,0,236,44,1,0,0,0,237,238,5,33,
        0,0,238,46,1,0,0,0,239,240,5,60,0,0,240,48,1,0,0,0,241,242,5,62,
        0,0,242,50,1,0,0,0,243,244,5,43,0,0,244,52,1,0,0,0,245,246,5,45,
        0,0,246,54,1,0,0,0,247,248,5,47,0,0,248,56,1,0,0,0,249,250,5,42,
        0,0,250,58,1,0,0,0,251,252,5,40,0,0,252,60,1,0,0,0,253,254,5,41,
        0,0,254,62,1,0,0,0,255,256,5,44,0,0,256,64,1,0,0,0,9,0,188,193,199,
        205,211,218,226,231,1,6,0,0
    ]

class proyectoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    CHARMANDER = 1
    TOTODILE = 2
    WOOPER = 3
    PIKACHU = 4
    CORVIKNIGHT = 5
    RATATA = 6
    PARAS = 7
    CLEFABLE = 8
    TENTACOOL = 9
    SEEL = 10
    DRAGONITE = 11
    NECROZMA = 12
    CRESSELIA = 13
    MEWTWO = 14
    UNOWN = 15
    INT = 16
    ID = 17
    FLOAT = 18
    STRING = 19
    BOOL = 20
    WS = 21
    EQUAL = 22
    EXC = 23
    MINOR = 24
    BIGGER = 25
    PLUS = 26
    MINUS = 27
    DIV = 28
    MUL = 29
    OPA = 30
    CLPA = 31
    COMA = 32

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'Charmander'", "'Totodile'", "'Wooper'", "'Pikachu'", "'Corviknight'", 
            "'Ratata'", "'Paras'", "'Clefable'", "'Tentacool'", "'Seel'", 
            "'Dragonite'", "'Necrozma'", "'Cresselia'", "'Mewtwo'", "'='", 
            "'!'", "'<'", "'>'", "'+'", "'-'", "'/'", "'*'", "'('", "')'", 
            "','" ]

    symbolicNames = [ "<INVALID>",
            "CHARMANDER", "TOTODILE", "WOOPER", "PIKACHU", "CORVIKNIGHT", 
            "RATATA", "PARAS", "CLEFABLE", "TENTACOOL", "SEEL", "DRAGONITE", 
            "NECROZMA", "CRESSELIA", "MEWTWO", "UNOWN", "INT", "ID", "FLOAT", 
            "STRING", "BOOL", "WS", "EQUAL", "EXC", "MINOR", "BIGGER", "PLUS", 
            "MINUS", "DIV", "MUL", "OPA", "CLPA", "COMA" ]

    ruleNames = [ "CHARMANDER", "TOTODILE", "WOOPER", "PIKACHU", "CORVIKNIGHT", 
                  "RATATA", "PARAS", "CLEFABLE", "TENTACOOL", "SEEL", "DRAGONITE", 
                  "NECROZMA", "CRESSELIA", "MEWTWO", "UNOWN", "INT", "ID", 
                  "FLOAT", "STRING", "BOOL", "WS", "EQUAL", "EXC", "MINOR", 
                  "BIGGER", "PLUS", "MINUS", "DIV", "MUL", "OPA", "CLPA", 
                  "COMA" ]

    grammarFileName = "proyecto.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


